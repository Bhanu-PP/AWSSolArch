--status of burst activity queries that are not qualified 
SELECT w.service_class AS queue,
CASE q.concurrency_scaling_status
                WHEN -2 THEN '-2 - Result Cache'
                WHEN -1 THEN '-1 - Short Query Acceleration'
                WHEN  0 THEN '00 - Scheduled on Main'
                WHEN  1 THEN '01 - Did Burst'
                WHEN  2 THEN '02 - Burst not Enabled'
                WHEN  3 THEN '03 - Ineligible Query Type'
                WHEN  4 THEN '04 - Volt Tables Accessed'
                WHEN  5 THEN '05 - User Temp Tables Acessed'
                WHEN  6 THEN '06 - System Table Accessed'
                WHEN  7 THEN '07 - No Backup Tables Accessed'
                WHEN  8 THEN '08 - Interleaved Table Accessed'
                WHEN  9 THEN '09 - Contains Python UDF'
                WHEN 10 THEN '10 - PG Tables Accessed'
                WHEN 11 THEN '11 - Dirty Tables Accessed'
                WHEN 12 THEN '12 - Direct Dispatched Query'
                WHEN 13 THEN '13 - Extended Protocol is Disabled'
                WHEN 14 THEN '14 - Cursor is Disabled'
                WHEN 15 THEN '15 - Param Prepare is Disabled'
                WHEN 16 THEN '16 - No Table Accessed'
                WHEN 17 THEN '17 - Spectrum Table is Disabled'
                WHEN 18 THEN '18 - Non Scalable Function Invoked'
                WHEN 19 THEN '19 - Instance Blacklisted'
                WHEN 20 THEN '20 - Burst temporarily disabled'
                WHEN 21 THEN '21 - Unload queries are disabled'
                WHEN 22 THEN '22 - Unsupported unload type'
                WHEN 23 THEN '23 - Non VPC clusters cannot burst'
                WHEN 24 THEN '24 - VPCE not setup'
                WHEN 25 THEN '25 - Failed - Inelegible to rerun on main cluster due to failure handling not enabled'
                WHEN 26 THEN '26 - Failed - Inelegible to rerun on main cluster due to concurrency scaling not auto'
                WHEN 27 THEN '27 - Failed - Inelegible to rerun on main cluster due to results already returning'
                WHEN 28 THEN '28 - Failed - Inelegible to rerun on main cluster due to non retriable error'
                WHEN 29 THEN '29 - Failed - Elegible to rerun on main cluster'
                WHEN 30 THEN '30 - Cumulative time not met'
                WHEN 31 THEN '31 - Paused query'
                WHEN 32 THEN '32 - Non-burst queue'
                WHEN 33 THEN '33 - Query has state on Main cluster'
                WHEN 34 THEN '34 - Query is inelegible for bursting Volt CTAS'
                WHEN 35 THEN '35 - Resource blacklisted'
                WHEN 36 THEN '36 - Bursting Volt-generated queries is disabled'
                WHEN 37 THEN '37 - Query is retrying on Main cluster'
                WHEN 38 THEN '38 - Cannot burst Volt-created CTAS using cursors'
                WHEN 39 THEN '39 - Concurrency Scaling usage limit reached'
                WHEN 40 THEN '40 - Unsupported VoltTT Utility query'
                WHEN 41 THEN '41 - Write query generating Volt TTs'
                WHEN 42 THEN '42 - VoltTT query with invalid state'
                WHEN 43 THEN '43 - Explain query generating Volt TTs'
                WHEN 44 THEN '44 - Bursting Volt-generated queries is disabled'
                WHEN 45 THEN '45 - Resource of VoltTT UNLOAD is blacklisted'
                WHEN 46 THEN '46 - Multiple pre-Volt query trees'
                WHEN 50 THEN '00 - Failed to prepare cluster'
                WHEN 3000 THEN '03 - Uncategorized Ineligible Query Type'
                WHEN 3001 THEN '03 - Insert Ineligible Query Type'
                WHEN 3002 THEN '03 - Delete Ineligible Query Type'
                WHEN 3003 THEN '03 - Update Ineligible Query Type'
                WHEN 3004 THEN '03 - CTAS Ineligible Query Type'
                WHEN 3005 THEN '03 - Unload Ineligible Query Type'
                WHEN 3006 THEN '03 - Copy Ineligible Query Type'
                WHEN 3007 THEN '03 - Select Ineligible Query Type'
                WHEN 3008 THEN '03 - Utility Ineligible Query Type'
                WHEN 3009 THEN '03 - Analyze Ineligible Query Type'
                WHEN 3010 THEN '03 - Vacuum Ineligible Query Type'
                WHEN 3011 THEN '03 - Table conversion Ineligible Query Type'
                WHEN 3012 THEN '03 - Undo Ineligible Query Type'
                WHEN 3013 THEN '03 - IdentityHighwater Ineligible Query Type'
                WHEN 3014 THEN '03 - AppendTable Ineligible Query Type'
                WHEN 3015 THEN '03 - AddColumn Ineligible Query Type'
                WHEN 3016 THEN '03 - ResetRowIds Ineligible Query Type'
                ELSE 'Unknown status - ' || concurrency_scaling_status
END as concurrency_scaling_status,
COUNT( * ) AS queries
     , SUM( q.aborted )  AS aborted
     , SUM( ROUND( total_queue_time::NUMERIC / 1000000,2 ) ) AS queue_secs
     , SUM( ROUND( total_exec_time::NUMERIC / 1000000,2 ) )  AS exec_secs
FROM stl_query q
     JOIN stl_wlm_query w
          USING (userid,query)
WHERE q.userid > 1
  AND q.starttime > '1/25/2021 00:00'
  AND q.endtime < '1/25/2021 18:00'
GROUP BY 1,2
ORDER BY 1,2;